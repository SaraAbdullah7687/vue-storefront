{"version":3,"file":"index.es.js","sources":["../src/integrations.ts","../src/helpers/getAgnosticStatusCode.ts","../src/createServer.ts"],"sourcesContent":["import consola from 'consola';\nimport { Express } from 'express';\nimport {\n  Integration,\n  ApiClientFactory,\n  ApiClientExtension,\n  IntegrationsSection,\n  CustomQuery,\n  Logger\n} from '@vue-storefront/core';\ninterface IntegrationLoaded {\n  apiClient: ApiClientFactory;\n  initConfig: Record<string, any>;\n  configuration: any;\n  extensions: ApiClientExtension[];\n  customQueries?: Record<string, CustomQuery>;\n}\n\ninterface LoadInitConfigProps {\n  apiClient: ApiClientFactory;\n  integration: Integration;\n  tag: string;\n}\n\ntype IntegrationsLoaded = Record<string, IntegrationLoaded>;\n\n/**\n * Resolves dependencies based on the current working directory, not relative to this package.\n */\nfunction resolveDependency<T>(name: string): T {\n  try {\n    const path = require.resolve(name, { paths: [process.cwd()] });\n\n    // eslint-disable-next-line global-require\n    return require(path);\n  } catch (error) {\n    Logger.error(error);\n    throw new Error(`Could not resolve integration \"${name}\". See the error above for more details.`);\n  }\n}\n\nfunction createRawExtensions(apiClient: ApiClientFactory, integration: Integration): ApiClientExtension[] {\n  const extensionsCreateFn = integration.extensions;\n  const predefinedExtensions = (apiClient.createApiClient as any)._predefinedExtensions;\n\n  return extensionsCreateFn ? extensionsCreateFn(predefinedExtensions) : predefinedExtensions;\n}\n\nfunction lookUpExternal(extension: string | ApiClientExtension): ApiClientExtension[] {\n  return typeof extension === 'string' ? resolveDependency<ApiClientExtension[]>(extension) : [extension];\n}\n\nfunction createExtensions(rawExtensions: ApiClientExtension[]): ApiClientExtension[] {\n  return rawExtensions.reduce((prev, curr) => [...prev, ...lookUpExternal(curr)], []);\n}\n\nasync function getInitConfig({ apiClient, tag, integration }: LoadInitConfigProps): Promise<Record<string, any>> {\n  if (apiClient?.init) {\n    try {\n      consola.success(`- Integration: ${tag} init function Start!`);\n      const initConfig = await apiClient?.init(integration.configuration);\n      consola.success(`- Integration: ${tag} init function Done!`);\n      return initConfig;\n    } catch (error) {\n      throw Error(`Error during executing init function in ${tag} integration. Error message: ${error}`);\n    }\n  }\n  return {};\n}\n\nasync function registerIntegrations(app: Express, integrations: IntegrationsSection): Promise<IntegrationsLoaded> {\n  return await Object.entries<Integration>(integrations).reduce(async (prevAsync, [tag, integration]) => {\n    consola.info(`- Loading: ${tag} ${integration.location}`);\n    const prev = await prevAsync;\n    const apiClient: ApiClientFactory = resolveDependency<ApiClientFactory>(integration.location);\n    const rawExtensions: ApiClientExtension[] = createRawExtensions(apiClient, integration);\n    const extensions: ApiClientExtension[] = createExtensions(rawExtensions);\n    const initConfig: Record<string, any> = await getInitConfig({ apiClient, integration, tag });\n\n    extensions.forEach(({ name, extendApp }) => {\n      consola.info(`- Loading: ${tag} extension: ${name}`);\n\n      if (extendApp) {\n        extendApp({ app, configuration: integration.configuration });\n      }\n    });\n\n    consola.success(`- Integration: ${tag} loaded!`);\n\n    return {\n      ...prev,\n      [tag]: {\n        apiClient,\n        extensions,\n        initConfig,\n        configuration: integration.configuration,\n        customQueries: integration.customQueries\n      }\n    };\n  }, Promise.resolve({}));\n}\n\nexport { registerIntegrations };\n","const STATUS_FIELDS = ['status', 'statusCode'] as const;\n\nexport type AxiosError = {\n  isAxiosError: boolean;\n  response: {\n    status: number\n  }\n}\n\nexport type ApolloError = {\n  networkError?: number\n  code: string | number\n}\n\ntype Status = typeof STATUS_FIELDS[number]\n\ntype StatusCode = number | null\n\nexport type UnknownError = { [K in Status]?: number; } & { [x: string]: UnknownError };\n\nfunction reduceStatus(narrowObject: UnknownError, depth: number) {\n  return function(statusCode: StatusCode, c: string): StatusCode {\n    if (statusCode) {\n      return statusCode;\n    }\n\n    if (STATUS_FIELDS.includes(c as Status)) {\n      return narrowObject[c as Status];\n    }\n    const newDepth = depth + 1;\n\n    return obtainStatusCode(narrowObject[c], newDepth);\n  };\n}\n\nfunction obtainStatusCode(givenObject: UnknownError, depth = 1): StatusCode {\n  const obj = givenObject || {};\n\n  if (depth > 3) {\n    return;\n  }\n  return Object.keys(obj).reduce(reduceStatus(obj, depth), null) as unknown as number;\n}\n\nfunction getAxiosStatusCode(error: AxiosError) {\n  if (error?.isAxiosError) {\n    return error.response.status;\n  }\n}\n\nfunction getApolloStatusCode(error: ApolloError) {\n  if (error?.networkError) {\n    return 500;\n  }\n\n  if (error?.code) {\n    return typeof error.code === 'string' ? 400 : error.code;\n  }\n}\n\nfunction getAgnosticStatusCode(error: AxiosError | ApolloError | UnknownError): number {\n  return getAxiosStatusCode(error as AxiosError) ||\n    getApolloStatusCode(error as ApolloError) ||\n    obtainStatusCode(error as UnknownError) ||\n    200;\n}\n\nexport default getAgnosticStatusCode;\n","import express, { Request, Response, Express } from 'express';\nimport cookieParser from 'cookie-parser';\nimport cors from 'cors';\nimport consola from 'consola';\nimport helmet, { HelmetOptions } from 'helmet';\nimport { MiddlewareConfig, ApiClientExtension, CustomQuery } from '@vue-storefront/core';\nimport { registerIntegrations } from './integrations';\nimport getAgnosticStatusCode from './helpers/getAgnosticStatusCode';\n\nconst app = express();\n\napp.use(express.json());\napp.use(cookieParser());\napp.use(cors());\napp.disable('x-powered-by');\n\ninterface MiddlewareContext {\n  req: Request;\n  res: Response;\n  extensions: ApiClientExtension[];\n  customQueries: Record<string, CustomQuery>;\n}\n\ninterface RequestParams {\n  integrationName: string;\n  functionName: string;\n}\n\ninterface Helmet extends HelmetOptions {\n  helmet?: boolean | HelmetOptions;\n}\n\nasync function createServer(config: MiddlewareConfig): Promise<Express> {\n  consola.info('Middleware starting....');\n\n  const options: Helmet = {\n    contentSecurityPolicy: false,\n    crossOriginOpenerPolicy: false,\n    crossOriginEmbedderPolicy: false,\n    permittedCrossDomainPolicies: {\n      permittedPolicies: 'none'\n    },\n    ...(config.helmet || {}) as HelmetOptions\n  };\n  const isHelmetEnabled = config.helmet === true || (config.helmet && Object.keys(config.helmet).length > 0);\n  if (isHelmetEnabled) {\n    app.use(helmet(options));\n    consola.info('VSF `Helmet` middleware added');\n  }\n\n  consola.info('Loading integrations...');\n  const integrations = await registerIntegrations(app, config.integrations);\n  consola.success('Integrations loaded!');\n\n  app.post('/:integrationName/:functionName', async (req: Request, res: Response) => {\n    const { integrationName, functionName } = req.params as any as RequestParams;\n\n    if (!integrations[integrationName]) {\n      const errMsg = `\"${integrationName}\" integration is not configured. Please, check the request path or integration configuration.`;\n\n      res.status(404);\n      res.send(errMsg);\n\n      return;\n    }\n\n    const { apiClient, configuration, extensions, customQueries, initConfig } = integrations[integrationName];\n    const middlewareContext: MiddlewareContext = { req, res, extensions, customQueries };\n    const createApiClient = apiClient.createApiClient.bind({ middleware: middlewareContext });\n    const apiClientInstance = createApiClient({ ...configuration, ...initConfig });\n    const apiFunction = apiClientInstance.api[functionName];\n\n    try {\n      if (!(Symbol.iterator in Object(req.body))) req.body = [req.body];\n      const platformResponse = await apiFunction(...req.body);\n      res.send(platformResponse);\n    } catch (error) {\n      res.status(getAgnosticStatusCode(error));\n      res.send(error);\n    }\n  });\n\n  consola.success('Middleware created!');\n  return app;\n}\n\nexport { createServer };\n"],"names":[],"mappings":"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"}