{"version":3,"file":"index.cjs.js","sources":["../src/helpers/log.ts","../src/helpers/merge.ts","../src/helpers/resolveDependency.ts","../src/modules/performance.ts","../src/modules/storefront-ui.ts","../src/modules/raw-sources-loader.ts","../src/helpers/isProduction.ts","../src/index.ts"],"sourcesContent":["import consola from 'consola';\nimport chalk from 'chalk';\nimport { Log } from '../types';\n\nconst log: Log = Object.freeze({\n  info: (message) => consola.info(chalk.bold('VSF'), message),\n  success: (message) => consola.success(chalk.bold('VSF'), message),\n  warning: (message) => consola.warn(chalk.bold('VSF'), message),\n  error: (message) => consola.error(chalk.bold('VSF'), message)\n});\n\nexport default log;\n","import { mergeWith, isArray } from 'lodash';\n\nexport default (source, destination) => mergeWith(source, destination, (objValue, srcValue) => {\n  if (isArray(objValue)) {\n    return objValue.concat(srcValue);\n  }\n});\n","export default function resolveDependency(name: string): string {\n  try {\n    return require.resolve(name, { paths: [process.cwd()] });\n  } catch (error) {\n    return '';\n  }\n}\n","import { merge } from 'lodash';\nimport { ModuleOptions, PurgeCSSOptions } from '../types';\n\nfunction pushScripts(): void {\n  this.options.render = merge(this.options.render, {\n    http2: {\n      push: true,\n      pushAssets: (request, response, publicPath, preloadFiles) => {\n        return preloadFiles\n          .filter(({ asType }) => asType === 'script')\n          .map(({ file, asType }) => `<${publicPath}${file}>; rel=preload; as=${asType}`);\n      }\n    }\n  });\n}\n\nfunction loadPurgeCss(options: PurgeCSSOptions): void {\n  // PurgeCSS module should be installed after all other modules\n  this.nuxt.hook('modules:done', moduleContainer => moduleContainer.addModule(['nuxt-purgecss', options]));\n}\n\nexport default function VueStorefrontPerformanceModule(options: ModuleOptions): void {\n  const { httpPush, purgeCSS } = options.performance;\n\n  if (httpPush) {\n    pushScripts.call(this);\n  }\n\n  if (purgeCSS && purgeCSS.enabled) {\n    loadPurgeCss.call(this, purgeCSS);\n  }\n}\n","import merge from '../helpers/merge';\nimport { ModuleOptions } from '../types';\n\n// TODO: Create a separate nuxt module for storefront ui\nfunction loadStorefrontRawSources(options: ModuleOptions): void {\n  const rawSources = [\n    '@storefront-ui/vue',\n    '@storefront-ui/shared'\n  ];\n\n  options.useRawSource = merge(options.useRawSource, {\n    dev: rawSources,\n    prod: rawSources\n  });\n}\n\nexport default function VueStorefrontPerformanceModule(options: ModuleOptions): void {\n  loadStorefrontRawSources.call(this, options);\n}\n","import log from '../helpers/log';\nimport isProduction from '../helpers/isProduction';\nimport resolveDependency from '../helpers/resolveDependency';\nimport { ModuleOptions } from '../types';\n\nexport default function VueStorefrontPerformanceModule(options: ModuleOptions): void {\n  const useRawSource = (pckg) => {\n    const pkgPath = resolveDependency(`${pckg}/package.json`);\n    // eslint-disable-next-line global-require\n    const pkg = require(pkgPath || '');\n\n    if (pkg.module) {\n      this.extendBuild(config => {\n        config.resolve.alias[pkg.name + '$'] = resolveDependency(`${pckg}/${pkg.module}`);\n      });\n    }\n\n    this.options.build.transpile.push(pckg);\n    log.info(`Using raw source/ESM for ${pkg.name}`);\n  };\n\n  options.useRawSource[isProduction(options) ? 'prod' : 'dev'].map(pckg => useRawSource(pckg));\n}\n","import { ModuleOptions } from '../types';\n\nexport default (options: ModuleOptions): boolean => process.env.NODE_ENV === 'production' || options.coreDevelopment;\n","// TODO proper bundling, for now it's just to experiment with nuxt modules api\nimport fs from 'fs';\nimport path from 'path';\nimport log from './helpers/log';\nimport merge from './helpers/merge';\nimport resolveDependency from './helpers/resolveDependency';\nimport performanceModule from './modules/performance';\nimport storefrontUiModule from './modules/storefront-ui';\nimport rawSourcesModule from './modules/raw-sources-loader';\nimport { ModuleOptions } from './types';\n\nexport { default as meta } from '../package.json';\n\n/**\n * VueStorefrontNuxtModule\n * @param moduleOptions\n */\nexport default function VueStorefrontNuxtModule(moduleOptions: ModuleOptions) {\n  const defaultOptions = {\n    coreDevelopment: false,\n    i18nExtension: true,\n    e2e: true,\n    logger: true,\n    ssr: true,\n    context: true,\n    sfui: true,\n    performance: {\n      httpPush: true,\n      purgeCSS: {\n        enabled: false,\n        paths: ['**/*.vue']\n      }\n    },\n    useRawSource: {\n      dev: [],\n      prod: []\n    }\n  };\n\n  const options = merge(defaultOptions, moduleOptions);\n\n  // Add meta data\n  this.options.head.meta.push({\n    name: 'generator',\n    content: 'Vue Storefront 2'\n  });\n\n  log.info('Starting Vue Storefront Nuxt Module');\n\n  // Enable HTTP/2 push for JS files\n  if (options.performance.httpPush) {\n    this.options.render = merge(this.options.render, {\n      http2: {\n        push: true,\n        pushAssets: (request, response, publicPath, preloadFiles) => {\n          return preloadFiles\n            .filter(({ asType }) => asType === 'script')\n            .map(({ file, asType }) => `<${publicPath}${file}>; rel=preload; as=${asType}`);\n        }\n      }\n    });\n  }\n\n  if (options.context) {\n    // Context plugin\n    this.addPlugin(path.resolve(__dirname, '../plugins/context.js'));\n    log.success('Installed Vue Storefront Context plugin');\n  }\n  if (options.ssr) {\n    // SSR plugin\n    this.addPlugin(path.resolve(__dirname, '../plugins/ssr.js'));\n    log.success('Installed Vue Storefront SSR plugin');\n  }\n\n  if (options.logger) {\n    // Logger plugin\n    this.addPlugin({\n      src: path.resolve(__dirname, '../plugins/logger.js'),\n      options: moduleOptions.logger || {}\n    });\n    log.success('Installed VSF Logger plugin');\n  }\n\n  if (options.e2e) {\n    // Context plugin\n    this.addPlugin(path.resolve(__dirname, '../plugins/e2e-testing.js'));\n    log.success('Installed Vue Storefront E2E testing plugin');\n  }\n\n  // i18n-cookies plugin\n  if (options.i18nExtension) {\n    this.addPlugin({\n      src: path.resolve(__dirname, '../plugins/i18n-cookies.js'),\n      options: this.options.i18n\n    });\n    log.success('Installed Internationalization Cookies plugin');\n  }\n\n  // StorefrontUI module\n  if (fs.existsSync(resolveDependency('@storefront-ui/vue')) && options.sfui) {\n    storefrontUiModule.call(this, options);\n    log.success('Installed StorefrontUI Module');\n  }\n\n  // Performance module\n  performanceModule.call(this, options);\n  log.success('Installed Performance Module');\n\n  // Raw sources loader\n  rawSourcesModule.call(this, options);\n}\n"],"names":["log","Object","freeze","info","message","consola","chalk","bold","success","warning","warn","error","merge","source","destination","mergeWith","objValue","srcValue","isArray","concat","resolveDependency","name","require","resolve","paths","process","cwd","pushScripts","this","options","render","http2","push","pushAssets","request","response","publicPath","preloadFiles","filter","_a","asType","map","file","loadPurgeCss","nuxt","hook","moduleContainer","addModule","VueStorefrontPerformanceModule","performance","httpPush","purgeCSS","call","enabled","loadStorefrontRawSources","rawSources","useRawSource","dev","prod","_this","env","NODE_ENV","coreDevelopment","isProduction","pckg","pkgPath","pkg","module","extendBuild","config","alias","build","transpile","moduleOptions","i18nExtension","e2e","logger","ssr","context","sfui","head","meta","content","addPlugin","path","__dirname","src","i18n","fs","existsSync","storefrontUiModule","performanceModule","rawSourcesModule"],"mappings":"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"}